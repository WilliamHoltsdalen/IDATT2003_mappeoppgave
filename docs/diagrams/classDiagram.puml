@startuml


top to bottom direction
skinparam linetype ortho

class App {
  + App():
  + main(String[]): void
}
class Board {
  + Board(int, int):
  - tiles: Map<Integer, Tile>
  + getTile(int): Tile
  - populateTiles(int, int): void
  + addTile(Tile): void
  + getTileCount(): int
}
class BoardGame {
  + BoardGame(int, int, List<Player>, int):
  - currentPlayer: Player
  - dice: Dice
  - board: Board
  - players: List<Player>
  - roundNumber: int
  + getBoard(): Board
  + getCurrentPlayer(): Player
  + getDice(): Dice
  + incrementRoundNumber(): void
  + getRoundNumber(): int
  - createDice(int): void
  - createBoard(int, int): void
  - addPlayers(List<Player>): void
  + setCurrentPlayer(Player): void
  + getWinner(): Player
  + getPlayers(): List<Player>
}
class Dice {
  + Dice(int):
  - DIE_NUMBER_OUT_OF_RANGE_ERROR: String
  - diceList: List<Die>
  + getTotalValue(): int
  + getNumberOfDice(): int
  + rollDice(): void
  - addDice(int): void
  + rollSingleDie(int): void
  + getDieValue(int): int
  + getDiceList(): List<Die>
}
class Die {
  + Die():
  - lastRolledValue: int
  + roll(): void
  - setValue(int): void
  + getValue(): int
}
class GameController {
  + GameController(List<Player>):
  - boardGame: BoardGame
  - initController(List<Player>): void
  - getBoard(): Board
  - findNextTile(Player, int): Tile
  + rollDiceAndMovePlayer(Player): void
  + getWinner(): Player
  - getCurrentPlayer(): Player
  + getPlayers(): List<Player>
  - getDice(): Dice
  + updateCurrentPlayer(): void
  + performPlayerMove(): void
  + getRoundNumber(): int
}
class InterfaceUtils {
  - InterfaceUtils():
  - scanner: Scanner
  + printGameClientMenu(): void
  + printWelcomeMessage(): void
  - getPlayerCount(): int
  + printGoodbyeMessage(): void
  + getPlayerNames(): List<String>
  + stringInput(): String
  + exitApplication(): void
  + printErrorMessage(String): void
  + printSpacing(): void
  + integerInput(): int
}
class LadderAction {
  + LadderAction(int, String):
  - description: String
  - destinationTileId: int
  + getDestinationTileId(): int
  - setDestinationTileId(int): void
  - setDescription(String): void
  + perform(Player): void
  + getDescription(): String
}
class Player {
  + Player(String):
  - currentTile: Tile
  - name: String
  + getName(): String
  + getCurrentTile(): Tile
  + move(int): void
  + setName(String): void
  + placeOnTile(Tile): void
}
class SomeOtherAction {
  + SomeOtherAction():
  + perform(Player): void
}
class TextUserInterface {
  + TextUserInterface():
  ~ gameController: GameController
  - initGameController(): void
  - exitByError(String): void
  - tuiGetPlayers(): List<Player>
  - tuiMainMenu(): void
  + run(): void
  - tuiGameClient(): void
  + init(): void
}
class Tile {
  + Tile(int):
  - landAction: TileAction
  - tileId: int
  + getTileId(): int
  + leavePlayer(Player): void
  + setLandAction(TileAction): void
  - setTileId(int): void
  + landPlayer(Player): void
  + getLandAction(): TileAction
}
interface TileAction << interface >> {
  + perform(Player): void
}

App                -[#595959,dashed]->  TextUserInterface : "«create»"
Board             "1" *-[#595959,plain]-> "tiles\n*" Tile
Board              -[#595959,dashed]->  Tile              : "«create»"
BoardGame          -[#595959,dashed]->  Board             : "«create»"
BoardGame         "1" *-[#595959,plain]-> "board\n1" Board
BoardGame          -[#595959,dashed]->  Dice              : "«create»"
BoardGame         "1" *-[#595959,plain]-> "dice\n1" Dice
BoardGame         "1" *-[#595959,plain]-> "players\n*" Player
Dice              "1" *-[#595959,plain]-> "diceList\n*" Die
Dice               -[#595959,dashed]->  Die               : "«create»"
GameController    "1" *-[#595959,plain]-> "boardGame\n1" BoardGame
GameController     -[#595959,dashed]->  BoardGame         : "«create»"
LadderAction       -[#008200,dashed]-^  TileAction
Player            "1" *-[#595959,plain]-> "currentTile\n1" Tile
SomeOtherAction    -[#008200,dashed]-^  TileAction
TextUserInterface "1" *-[#595959,plain]-> "gameController\n1" GameController
TextUserInterface  -[#595959,dashed]->  GameController    : "«create»"
TextUserInterface  -[#595959,dashed]->  Player            : "«create»"
Tile              "1" *-[#595959,plain]-> "landAction\n1" TileAction
@enduml
